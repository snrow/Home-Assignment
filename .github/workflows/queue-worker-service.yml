name: Queue Worker Service CI/CD
permissions:
  id-token: write
  contents: write
concurrency:
  group: queue-worker-service-deploy
  cancel-in-progress: true
on:
  push:
    branches:
      - main
    paths:
      - 'microservices/queue-worker-service/**'
  pull_request:
    paths:
      - 'microservices/queue-worker-service/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Image Tag
        id: set-tag
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "image_tag=${{ github.run_id }}-$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::048999592382:role/GitHubActionsRole
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./microservices/queue-worker-service
          push: true
          tags: |
            048999592382.dkr.ecr.eu-central-1.amazonaws.com/sqs-puller-service:${{ steps.set-tag.outputs.image_tag }}
            048999592382.dkr.ecr.eu-central-1.amazonaws.com/sqs-puller-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update terraform.tfvars
        run: |
          sed -i 's/^queue_worker_image_tag = .*/queue_worker_image_tag = "${{ needs.build-and-push.outputs.image_tag }}"/' environments/prod/terraform.tfvars
        working-directory: .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::048999592382:role/GitHubActionsRole
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init
        working-directory: environments/prod

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: environments/prod

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan
          echo "Waiting for ECS services to stabilize..."
          if ! aws ecs wait services-stable --cluster devops-prod-cluster --services frontend-service queue-worker-service --region eu-central-1; then
            echo "Service stabilization failed. Checking service events..."
            aws ecs describe-services --cluster devops-prod-cluster --services frontend-service queue-worker-service --region eu-central-1
            echo "Checking task failures..."
            TASK_ARNS=$(aws ecs list-tasks --cluster devops-prod-cluster --service-name frontend-service --region eu-central-1 --query 'taskArns' --output text)
            if [ -n "$TASK_ARNS" ]; then
              aws ecs describe-tasks --cluster devops-prod-cluster --tasks $TASK_ARNS --region eu-central-1
            fi
            exit 1
          fi
        working-directory: environments/prod

      - name: Commit Updated terraform.tfvars
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add environments/prod/terraform.tfvars
          git commit -m "Update queue_worker_image_tag to ${{ needs.build-and-push.outputs.image_tag }}"
          git push origin main
        working-directory: .